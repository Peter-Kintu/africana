# Generated by Django 5.2.4 on 2025-07-13 16:17

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='lesson',
            options={'ordering': ['subject', 'title', 'version']},
        ),
        migrations.AlterModelOptions(
            name='question',
            options={'ordering': ['lesson', 'created_at']},
        ),
        migrations.AlterModelOptions(
            name='quizattempt',
            options={'ordering': ['-attempt_timestamp']},
        ),
        migrations.AlterModelOptions(
            name='studentprogress',
            options={'verbose_name_plural': 'Student Progress'},
        ),
        migrations.AddField(
            model_name='lesson',
            name='difficulty_level',
            field=models.CharField(choices=[('Easy', 'Easy'), ('Medium', 'Medium'), ('Hard', 'Hard')], default='Medium', max_length=50),
        ),
        migrations.AddField(
            model_name='lesson',
            name='prerequisites',
            field=models.JSONField(blank=True, help_text='JSON array of prerequisite lesson UUIDs or topic names.', null=True),
        ),
        migrations.AddField(
            model_name='lesson',
            name='subject',
            field=models.CharField(blank=True, help_text="e.g., 'Mathematics', 'Science', 'English'", max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='question',
            name='difficulty_level',
            field=models.CharField(choices=[('Easy', 'Easy'), ('Medium', 'Medium'), ('Hard', 'Hard')], default='Medium', max_length=50),
        ),
        migrations.AddField(
            model_name='question',
            name='expected_time_seconds',
            field=models.IntegerField(blank=True, help_text='Estimated time a student should take to answer (in seconds).', null=True),
        ),
        migrations.AddField(
            model_name='quizattempt',
            name='device_id',
            field=models.CharField(blank=True, help_text="Unique identifier for the student's device.", max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='quizattempt',
            name='raw_ai_response',
            field=models.JSONField(blank=True, help_text='Raw JSON output from the on-device AI model.', null=True),
        ),
        migrations.AddField(
            model_name='quizattempt',
            name='sync_status',
            field=models.CharField(choices=[('PENDING', 'Pending Sync'), ('SYNCED', 'Synced'), ('CONFLICT', 'Conflict')], db_index=True, default='PENDING', max_length=10),
        ),
        migrations.AddField(
            model_name='student',
            name='class_name',
            field=models.CharField(blank=True, help_text="e.g., 'Class A', 'Morning Session'", max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='student',
            name='date_of_birth',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='student',
            name='gender',
            field=models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, null=True),
        ),
        migrations.AddField(
            model_name='student',
            name='last_device_sync',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='lesson',
            name='lesson_file',
            field=models.FileField(blank=True, help_text='Upload a ZIP file containing lesson content (e.g., JSON, HTML, images).', null=True, upload_to='lessons/'),
        ),
        migrations.AlterField(
            model_name='lesson',
            name='uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AlterField(
            model_name='lesson',
            name='version',
            field=models.IntegerField(default=1, help_text='Version number for content updates.'),
        ),
        migrations.AlterField(
            model_name='question',
            name='correct_answer_text',
            field=models.TextField(blank=True, help_text='For MCQ: exact correct option text. For SA: ideal answer/keywords for AI.', null=True),
        ),
        migrations.AlterField(
            model_name='question',
            name='options',
            field=models.JSONField(blank=True, help_text='JSON array of options for MCQ type questions.', null=True),
        ),
        migrations.AlterField(
            model_name='question',
            name='question_type',
            field=models.CharField(choices=[('MCQ', 'Multiple Choice Question'), ('SA', 'Short Answer')], max_length=50),
        ),
        migrations.AlterField(
            model_name='question',
            name='uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AlterField(
            model_name='quizattempt',
            name='ai_feedback_text',
            field=models.TextField(blank=True, help_text="Textual feedback from AI (e.g., 'Review algebra basics').", null=True),
        ),
        migrations.AlterField(
            model_name='quizattempt',
            name='attempt_timestamp',
            field=models.DateTimeField(auto_now_add=True, help_text='Timestamp when the attempt was recorded on the device.'),
        ),
        migrations.AlterField(
            model_name='quizattempt',
            name='is_correct',
            field=models.BooleanField(blank=True, help_text='True if AI/Teacher marked correct, False if incorrect, Null if ungraded.', null=True),
        ),
        migrations.AlterField(
            model_name='quizattempt',
            name='score',
            field=models.FloatField(blank=True, help_text='Score for short answer questions (e.g., 0.0 to 1.0).', null=True),
        ),
        migrations.AlterField(
            model_name='quizattempt',
            name='synced_at',
            field=models.DateTimeField(blank=True, db_index=True, null=True),
        ),
        migrations.AlterField(
            model_name='quizattempt',
            name='uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AlterField(
            model_name='student',
            name='grade_level',
            field=models.CharField(blank=True, help_text="e.g., 'Primary 5', 'Secondary 2'", max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='student',
            name='student_id_code',
            field=models.CharField(blank=True, help_text='A unique code for the student, e.g., generated in-app or by teacher.', max_length=50, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='studentprogress',
            name='last_updated',
            field=models.DateTimeField(auto_now=True, help_text='Timestamp when this progress record was last updated on the server.'),
        ),
        migrations.AlterField(
            model_name='studentprogress',
            name='overall_progress_data',
            field=models.JSONField(default=dict, help_text='Aggregated progress data per lesson/topic.'),
        ),
        migrations.AlterField(
            model_name='studentprogress',
            name='student',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='overall_progress', to='api.student'),
        ),
        migrations.AlterField(
            model_name='studentprogress',
            name='uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True),
        ),
    ]
